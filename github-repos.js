// Generated by CoffeeScript 1.6.3
var github, promise, request, statuses;

promise = require('when');

request = require('request');

statuses = {
  403: 'API request rate limit exceeded',
  404: 'You are not authorized to view this resource, or this resource does not exist'
};

github = function(user, clientId, clientSecret, clientUser) {
  var deferred, fetch, process;
  deferred = promise.defer();
  fetch = function(page, total) {
    var data;
    if (page == null) {
      page = 1;
    }
    if (total == null) {
      total = 0;
    }
    data = {
      headers: {
        'User-Agent': clientUser || user
      },
      url: "https://api.github.com/users/" + user + "/repos",
      qs: {
        page: page,
        per_page: 100
      }
    };
    if (clientId && clientSecret) {
      data.qs.client_id = clientId;
      data.qs.client_secret = clientSecret;
    }
    return request(data, function(err, body, res) {
      var status;
      status = body.statusCode;
      if (body.statusCode === 200) {
        res = JSON.parse(res);
        if (err || 'message' in res) {
          return deferred.reject(err || res);
        } else {
          return process(res, total, page);
        }
      } else {
        if (status in statuses) {
          return deferred.reject({
            status: status,
            message: statuses[status]
          });
        } else {
          return deferred.reject(status);
        }
      }
    });
  };
  process = function(res, total, page) {
    if (count) {
      total += count;
      deferred.notify(total);
      return fetch(++page, total);
    } else {
      return deferred.resolve(total);
    }
  };
  fetch();
  return deferred.promise;
};

module.exports = github;
